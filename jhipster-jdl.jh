entity Stock {
    name String required minlength(1) maxlength(100),
    description String maxlength(300),
    quantityInit Integer required min(0),
    quantityRemaining Integer required min(0),
    priceUnit Double required min(0),
    onSaleDate Instant required,
    expiryDate Instant required,
    bio Boolean required,
    available Boolean required
}

entity Cart {
    quantity Integer required min(1)
}

entity Purchase {
    saleDate Instant required,
    quantity Integer required min(1),
    withdraw Boolean required
}

entity Grade {
    grade Double required min(0) max(5),
    nbVoter Integer required min(0),
}

entity Category {
    name String required minlength(1) maxlength(100),
    description String maxlength(300),
}

entity ProductType {
    name String required minlength(1) maxlength(100),
    description String maxlength(300),
}

entity Warehouse {
    name String required minlength(1) maxlength(100),
    description String maxlength(300),
    tel String required minlength(4) maxlength(15),
}

entity Location {
    city String minlength(1) maxlength(100),
    country String minlength(1) maxlength(100),
    zip String required minlength(1) maxlength(30),
    address String minlength(1) maxlength(200),
    lon Double min(-180) max(180),
    lat Double min(-90) max(90)
} 

entity Holding {
    siret String required minlength(14) maxlength(14) unique,
    name String required minlength(1) maxlength(100),
    description String maxlength(300)
}

entity Image {
    name String required minlength(1) maxlength(100),
    description String maxlength(300),
    image ImageBlob required
}

relationship ManyToOne {
    Stock{productType required} to ProductType,
    Stock{holding required} to Holding,
    Stock{seller required} to User,
    Stock{warehouse required} to Warehouse,
    Cart{stock required} to Stock,
    Cart{client required} to User,
    Purchase{stock required} to Stock,
    Purchase{client required} to User,
    Grade{seller required} to User,
    Grade{productType required} to ProductType,
    Category{categoyParent} to Category,
    ProductType{category required} to Category,
    Warehouse{location required} to Location,
    Holding{location required} to Location,
    Holding{owner required} to User,
    Location{user} to User
}

relationship ManyToMany {
    Stock{image} to Image{stock},
    Category{image} to Image{category},
    ProductType{image} to Image{productType},
    Holding{image} to Image{holding},
    Warehouse{image} to Image{warehouse},
}

paginate all with pager
search all with elasticsearch
filter all
